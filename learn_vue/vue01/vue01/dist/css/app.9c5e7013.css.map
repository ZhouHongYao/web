{"version":3,"sources":["webpack:///src/components/E:/WebStorm workspace/web/learn_vue/vue01/vue01/src/components/src/components/Login.vue","app.9c5e7013.css","webpack:///src/components/E:/WebStorm workspace/web/learn_vue/vue01/vue01/src/components/src/components/HelloWorld.vue","webpack:///src/components/E:/WebStorm workspace/web/learn_vue/vue01/vue01/src/components/src/components/projects.vue","webpack:///src/components/E:/WebStorm workspace/web/learn_vue/vue01/vue01/src/components/src/components/projectsNew.vue","webpack:///src/components/E:/WebStorm workspace/web/learn_vue/vue01/vue01/src/components/src/components/def_table.vue","webpack:///src/components/E:/WebStorm workspace/web/learn_vue/vue01/vue01/src/components/src/components/navbar.vue","webpack:///src/E:/WebStorm workspace/web/learn_vue/vue01/vue01/src/src/App.vue"],"names":[],"mappings":"AAoFA,0BACA,SClFA,CDqFA,gCACA,WClFA,CCqEA,oBACA,eDhEA,CCmEA,oBACA,oBAAA,CACA,SDjEA,CCoEA,oBACA,oBAAA,CACA,aDlEA,CCqEA,mBACA,aDnEA,CEWA,sBACA,gBAAA,CACA,wBAAA,CACA,SFPA,CESA,wCACA,qBFPA,CGkCA,sBACA,gBH9BA,CIsDA,2BACA,eJlDA,CIoDA,qBACA,YJlDA,CKJA,yBACA,wBAAA,CACA,cAAA,CACA,KAAA,CACA,UAAA,CACA,WAAA,CACA,MLQA,CKNA,qBACA,oBLQA,CKNA,uBACA,aLQA,CMqBA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,iBAAA,CACA,aAAA,CACA,eNjBA","file":"app.9c5e7013.css","sourcesContent":["<template>\r\n    <div>\r\n        <!--        <form action=\"post\">-->\r\n        <!--        <label for=\"username\">账号:</label>-->\r\n        <!--        <input type=\"text\" placeholder=\"请输入账号\" id=\"username\" v-model=\"username\"><br>-->\r\n        <!--        <label for=\"password\">密码:</label>-->\r\n        <!--        <input type=\"password\" placeholder=\"请输入密码\" id=\"password\" v-model=\"password\">-->\r\n        <!--        </form>-->\r\n        <!--        <p>输入的账号：{{username}}</p>-->\r\n        <!--        <p>输入的密码：{{password}}</p>-->\r\n        <h3>登录框</h3>\r\n        <el-form :model=\"ruleForm\" status-icon ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n            <el-form-item label=\"账号\">\r\n                <el-input type=\"text\" v-model=\"ruleForm.username\" auto-complete=\"off\">\r\n                    <i class=\"el-icon-user-solid\" slot=\"prefix\"></i>\r\n                </el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"密码\" label-position=\"top\">\r\n                <el-input type=\"password\" v-model=\"ruleForm.password\" auto-complete=\"off\">\r\n                    <i class=\"el-icon-user\" slot=\"prefix\"></i>\r\n                </el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n                <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n        <p>输入的账号：{{ruleForm.username}}</p>\r\n        <p>输入的密码：{{ruleForm.password}}</p>\r\n        <h1>greeting插槽使用</h1>\r\n        <greeting>\r\n            <!-- <p>greeting插槽使用</p>-->\r\n            <h3>greeting子组件内容， 默认情况下会被忽略</h3>\r\n            <!-- vue2.6前-->\r\n            <p slot=\"part1\">part1</p>\r\n            <!-- vue2.6后-->\r\n            <template v-slot:part2>\r\n                <p>part2</p>\r\n            </template>\r\n            <template #part3>\r\n                <p>part3</p>\r\n            </template>\r\n<!--            vue2.6前-->\r\n<!--            <p slot=\"part4\" slot-scope=\"scope\">part4:{{scope.user_name}}</p>-->\r\n            <template slot=\"part4\" slot-scope=\"scope\">\r\n                part4:{{scope.user_name}}\r\n            </template>\r\n<!--            vue2.6后-->\r\n            <template #part5=\"scope\">\r\n                <p>part5:{{scope.user_name}}</p>\r\n            </template>\r\n            <template #part6=\"{user_name}\">\r\n                <p>part6:{{user_name}}</p>\r\n            </template>\r\n        </greeting>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Login\",\r\n        data() {\r\n            return {\r\n                username: \"admin\",\r\n                password: \"admin\",\r\n                ruleForm: {\r\n                    username: \"admin\",\r\n                    password: \"admin\",\r\n                }\r\n            }\r\n        },\r\n        created() {\r\n            // eslint-disable-next-line no-console\r\n            console.log('created');\r\n        },\r\n        mounted() {\r\n            // eslint-disable-next-line no-console\r\n            console.log('mounted');\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-form {\r\n        width: 30%;\r\n    }\r\n\r\n    .demo-ruleForm {\r\n        margin: auto;\r\n        /*border: 1px solid rgba(230, 230, 230, 0.27);*/\r\n    }\r\n\r\n</style>\r\n\r\n","\n.el-form[data-v-895843da] {\n    width: 30%;\n}\n.demo-ruleForm[data-v-895843da] {\n    margin: auto;\n    /*border: 1px solid rgba(230, 230, 230, 0.27);*/\n}\n\n\n\nh3[data-v-1a93c69e] {\n    margin: 40px 0 0;\n}\nul[data-v-1a93c69e] {\n    list-style-type: none;\n    padding: 0;\n}\nli[data-v-1a93c69e] {\n    display: inline-block;\n    margin: 0 10px;\n}\na[data-v-1a93c69e] {\n    color: #42b983;\n}\n\n\n.tab[data-v-da76fcca] {\n    margin: 20px auto;\n    border-collapse: collapse;\n    width: 30%;\n}\ntd[data-v-da76fcca], th[data-v-da76fcca]{\n    border: 1px solid gray;\n}\n\n\n.new[data-v-80bf10a6]{\n    margin: 50px auto;\n}\n\n\n.el_table[data-v-049da6d0] {\n    margin: 50px 30%;\n}\n.mb[data-v-049da6d0] {\n    display: none;\n}\n\n\n.navbar[data-v-0b51bc98]{\n    background-color: rgb(84, 92, 100);\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index:999;\n    left: 0;\n}\n.sy[data-v-0b51bc98]{\n    text-decoration: none;\n}\n.item[data-v-0b51bc98]{\n    color: aquamarine;\n}\n\n\n#app {\n    font-family: 'Avenir', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n}\n\n\n/*# sourceMappingURL=app.9c5e7013.css.map*/","<template>\r\n    <div class=\"hello\">\r\n        <h1>hello world!</h1>\r\n        <h1>/HelloWorld/:age</h1>\r\n        <p>Q：查询字符串参数如何定义？如何获取？路径参数如何定义？如何获取？</p>\r\n        <p><a href=\"http://49.235.177.249:7080/HelloWorld/90?age=100\">点击查看http://49.235.177.249:7080/HelloWorld/90?age=100</a> </p>\r\n        <h3>A:查询字符串参数定义及获取：this.$route.query.age：{{this.$route.query.age}}</h3>\r\n        <h3>A:路径字符串参数定义及获取：this.$route.params.age：{{this.$route.params.age}}</h3>\r\n        <h1>{{ msg }}</h1>\r\n        <h2>{{message}}</h2>\r\n      <h3>演练axios相关操作</h3>\r\n        <el-image :src=\"url\"\r\n                  fit=\"cover\">\r\n\r\n        </el-image>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // import axios from 'axios';\r\n    import {dogs} from '../api/api'\r\n\r\n    export default {\r\n        name: 'HelloWorld',\r\n        // props: {\r\n        //     msg: String\r\n        // },\r\n\r\n        data() {\r\n            // eslint-disable-next-line no-console\r\n            // console.log(this.$router);\r\n            // eslint-disable-next-line no-console\r\n            // console.log(this.$route);\r\n            return {\r\n                message: this.$route.params.message,\r\n                url: '',\r\n            }\r\n        },\r\n        mounted() {\r\n            // axios.get('https://github.com/public-apis/public-apis')\r\n            //     .then(function (response) {\r\n            //         console.log(response);\r\n            //此时的this指的是当前函数的引用\r\n            //         this.url = response.data.message;\r\n            //     })\r\n            //     .catch(function (err) {\r\n            //     });\r\n\r\n            //定义箭头函数\r\n            // axios.get('https://dog.ceo/api/breeds/image/random')\r\n            //         .then(response => {\r\n            //           console.log(response);\r\n            //           this.url = response.data.message;\r\n            //         })\r\n            //         .catch(function (err) {\r\n            //           console.log(err)\r\n            //         });\r\n\r\n            //调用dogs\r\n            dogs()\r\n                .then(response => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(response);\r\n                    this.url = response.data.message;\r\n                })\r\n                .catch(function (err) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(err)\r\n                });\r\n        }\r\n    }\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n    h3 {\r\n        margin: 40px 0 0;\r\n    }\r\n\r\n    ul {\r\n        list-style-type: none;\r\n        padding: 0;\r\n    }\r\n\r\n    li {\r\n        display: inline-block;\r\n        margin: 0 10px;\r\n    }\r\n\r\n    a {\r\n        color: #42b983;\r\n    }\r\n</style>\r\n","<template>\r\n    <div>\r\n    <table class=\"tab\">\r\n        <tr>\r\n            <th  v-for=\"(ph, key) in project_headers\" :key=\"key\">{{ph}}</th>\r\n        </tr>\r\n        <tr v-for=\"(project, key) in projects\" :key=\"key\">\r\n            <td >{{project.name}}</td>\r\n            <td>{{project.owner}}</td>\r\n            <td>{{project.app_type}}</td>\r\n        </tr>\r\n    </table>\r\n    <h2>这是全局组件greeting:</h2>\r\n        <greeting msg=\"这是全局组件greeting的msg\"></greeting>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"projects.vue\",\r\n\r\n        data() {\r\n            return {\r\n                project_headers: [\"项目名称\", \"项目负责人\", \"应用类型\"],\r\n                projects: [\r\n                    {name: \"项目1\", owner: \"tom\", app_type: \"web\"},\r\n                    {name: \"项目2\", owner: \"rose\", app_type: \"app\"},\r\n                    {name: \"项目3\", owner: \"admin\", app_type: \"mini_programme\"},\r\n                ]\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .tab {\r\n        margin: 20px auto;\r\n        border-collapse: collapse;\r\n        width: 30%;\r\n    }\r\n    td, th{\r\n        border: 1px solid gray;\r\n    }\r\n</style>","<template>\r\n    <div>\r\n        <el-table\r\n                ref=\"multipleTable\"\r\n                :data=\"tableData\"\r\n                tooltip-effect=\"dark\"\r\n                style=\"width: 30%\"\r\n                class=\"new\"\r\n                @selection-change=\"handleSelectionChange\">\r\n            <el-table-column\r\n                    type=\"selection\"\r\n                    width=\"55\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                    prop=\"name\"\r\n                    label=\"项目名称\"\r\n                    width=\"120\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                    prop=\"owner\"\r\n                    label=\"项目负责人\"\r\n                    width=\"120\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                    prop=\"app_type\"\r\n                    label=\"应用类型\"\r\n                    width=\"120\">\r\n            </el-table-column>\r\n\r\n        </el-table>\r\n        <div style=\"margin-top: 20px\">\r\n            <el-button @click=\"toggleSelection([tableData[1], tableData[2]])\">切换第二、第三行的选中状态</el-button>\r\n            <el-button @click=\"toggleSelection()\">取消选择</el-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"projectsNew\",\r\n        data(){\r\n            return {\r\n                  tableData: [\r\n                    {name: \"项目1\", owner: \"tom\", app_type: \"web\"},\r\n                    {name: \"项目2\", owner: \"rose\", app_type: \"app\"},\r\n                    {name: \"项目3\", owner: \"admin\", app_type: \"miniProgramme\"},\r\n                ],\r\n                multipleTable: [],\r\n            }\r\n        },\r\n        methods: {\r\n            toggleSelection(rows) {\r\n                if (rows) {\r\n                    rows.forEach(row => {\r\n                        this.$refs.multipleTable.toggleRowSelection(row);\r\n                    });\r\n                } else {\r\n                    this.$refs.multipleTable.clearSelection();\r\n                }\r\n            },\r\n            handleSelectionChange(val) {\r\n                this.multipleSelection = val;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .new{\r\n        margin: 50px auto;\r\n    }\r\n</style>","<template>\r\n    <div class=\"el_table\">\r\n        <el-table\r\n                :data=\"tableData\"\r\n                style=\"width: 100%\">\r\n            <el-table-column\r\n                    label=\"日期\"\r\n                    width=\"180\">\r\n                <template slot-scope=\"scope\">\r\n                    <i class=\"el-icon-time\"></i>\r\n                    <span style=\"margin-left: 10px\">{{ scope.row.date }}</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n                    label=\"姓名\"\r\n                    width=\"180\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-popover trigger=\"hover\" placement=\"top\">\r\n                        <p>姓名: {{ scope.row.name }}</p>\r\n                        <p>住址: {{ scope.row.address }}</p>\r\n                        <div slot=\"reference\" class=\"name-wrapper\">\r\n                            <el-tag size=\"medium\">{{ scope.row.name }}</el-tag>\r\n                        </div>\r\n                    </el-popover>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button\r\n                            size=\"mini\"\r\n                            @click=\"handleEdit(scope.$index, scope.row)\">编辑\r\n                    </el-button>\r\n                    <el-button\r\n                            size=\"mini\"\r\n                            type=\"danger\"\r\n                            @click=\"handleDelete(scope.$index, scope.row)\">删除\r\n                    </el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <messageBox class=\"mb\" :tab=\"tab\" :msg=\"msg\" @cb-cx=\"CB_CX\"/>\r\n        <messageBox class=\"mb\" :tab=\"tab2\" :msg=\"msg2\" @cb-cx=\"CB_CX2\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import messageBox from \"./messageBox\";\r\n    export default {\r\n        name: \"def_table.vue\",\r\n        data() {\r\n            return {\r\n                tableData: [\r\n                    {date: '2016-05-02', name: '王小虎', address: '上海市普陀区金沙江路 1518 弄'},\r\n                    {date: '2016-05-04', name: '王小虎', address: '上海市普陀区金沙江路 1517 弄'},\r\n                    {date: '2016-05-01', name: '王小虎', address: '上海市普陀区金沙江路 1519 弄'},\r\n                    {date: '2016-05-03', name: '王小虎', address: '上海市普陀区金沙江路 1516 弄'}\r\n                ],\r\n                tab:false,\r\n                tab2:false,\r\n                msg:'修改项目信息',\r\n                msg2:'删除项目信息',\r\n            }\r\n        },\r\n        components:{\r\n            messageBox,\r\n        },\r\n        methods: {\r\n            handleEdit(index, row) {\r\n                // eslint-disable-next-line no-console\r\n                console.log(index, row);\r\n                this.tab=true;\r\n                // alert(\"修改项目信息\");\r\n                // console.log(row.date);\r\n            },\r\n            handleDelete(index, row) {\r\n                // eslint-disable-next-line no-console\r\n                console.log(index, row);\r\n                this.tab2 = true;\r\n                // alert(\"删除项目信息\");\r\n            },\r\n            CB_CX(val){\r\n                // eslint-disable-next-line no-console\r\n                // console.log(val);\r\n                this.tab = val;\r\n            },\r\n            CB_CX2(val){\r\n                this.tab2 = val;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el_table {\r\n        margin: 50px 30%;\r\n    }\r\n    .mb {\r\n        display: none;\r\n    }\r\n</style>","<template>\r\n    <div class=\"navbar\">\r\n        <div class=\"line\"></div>\r\n        <el-menu\r\n                :default-active=\"activeIndex2\"\r\n                class=\"el-menu-demo\"\r\n                mode=\"horizontal\"\r\n                @select=\"handleSelect\"\r\n                background-color=\"#545c64\"\r\n                text-color=\"#fff\"\r\n                active-text-color=\"#ffd04b\">\r\n            <el-menu-item index=\"1\"><a href=\"http://49.235.177.249:7080/\" class=\"sy\">首页</a></el-menu-item>\r\n            <el-submenu index=\"2\">\r\n                <template slot=\"title\">相关链接</template>\r\n                <el-menu-item index=\"2-1\"><a href=\"http://49.235.177.249:7080/Login\" class=\"sy item\">登录</a></el-menu-item>\r\n                <el-menu-item index=\"2-2\"><a href=\"http://49.235.177.249:7080/greeting\" class=\"sy item\">问候</a></el-menu-item>\r\n                <el-submenu index=\"2-3\">\r\n                    <template slot=\"title\"><a href=\"http://49.235.177.249:7080/projects\" class=\"sy item\">项目</a></template>\r\n                    <el-menu-item index=\"2-3-1\"><a href=\"http://49.235.177.249:7080/projectsNew\" class=\"sy item\">projectsNew</a></el-menu-item>\r\n                </el-submenu>\r\n            </el-submenu>\r\n            <el-menu-item index=\"3\" disabled>about</el-menu-item>\r\n        </el-menu>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                activeIndex2: '1'\r\n            };\r\n        },\r\n        methods: {\r\n            handleSelect(key, keyPath) {\r\n                // eslint-disable-next-line no-console\r\n                console.log(key, keyPath);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .navbar{\r\n        background-color: rgb(84, 92, 100);\r\n        position: fixed;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index:999;\r\n        left: 0;\r\n    }\r\n    .sy{\r\n        text-decoration: none;\r\n    }\r\n    .item{\r\n        color: aquamarine;\r\n    }\r\n</style>","<!-- template用户展示给用户, 相当与MVVM模式中的V -->\r\n<template>\r\n    <div id=\"app\">\r\n        <navbar></navbar>\r\n        <img alt=\"Vue logo\" src=\"./assets/logo.png\">\r\n        <!-- 在父组件中给子组件传值 -->\r\n        <!--        <HelloWorld msg=\"Welcome to Your Vue.js App\"/>-->\r\n        <!--    <greeting msg=\"greeting component\"/>-->\r\n        <!--        <greeting id=\"1\"/>-->\r\n        <!--        <greeting id=\"2\"/>-->\r\n        <!--        <greeting :title2=\"title\"/>-->\r\n        <!--        <greeting></greeting>-->\r\n        <!--        <projects></projects>-->\r\n        <!--        <projectsNew></projectsNew>-->\r\n        <!--        <def_table></def_table>-->\r\n        <!--        <messageBox></messageBox>-->\r\n        <!--        <Login></Login>-->\r\n\r\n        <p>greeting演示,vue router相关操作</p>\r\n        <p>HelloWorld演练axios相关操作</p>\r\n        <p>Login使用element ui框架来创建一个登录框</p>\r\n        <p></p>\r\n        <ul>\r\n            <li>\r\n<!--                <router-link :to=\"{name:'greeting'}\" >greeting</router-link>-->\r\n                <a href=\"/greeting\">greeting</a>\r\n            </li>\r\n            <li>\r\n                <router-link :to=\"{name:'Login'}\">Login</router-link>\r\n            </li>\r\n            <li>\r\n                <router-link :to=\"{name:'HelloWorld', params:{age:'100'}}\">HelloWorld</router-link>\r\n            </li>\r\n            <li>\r\n                <router-link :to=\"{name:'messageBox'}\">messageBox</router-link>\r\n            </li>\r\n            <li>\r\n                <router-link :to=\"{name:'projects'}\">projects</router-link>\r\n            </li>\r\n            <li>\r\n                <router-link :to=\"{name:'projectsNew'}\">projectsNew</router-link>\r\n            </li>\r\n            <li>\r\n                <router-link :to=\"{name:'def_table'}\">def_table</router-link>\r\n            </li>\r\n        </ul>\r\n        <router-view></router-view>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // 导入子组件\r\n    // import HelloWorld from './components/HelloWorld.vue'\r\n    // import greeting from \"./components/greeting\";\r\n    // import projects from \"./components/projects\";\r\n    // import projectsNew from \"./components/projectsNew\";\r\n    // import def_table from \"./components/def_table\";\r\n    // import messageBox from \"./components/messageBox\";\r\n    // import Login from \"./components/Login\";\r\n    import navbar from \"./components/navbar\";\r\n\r\n    export default {\r\n        // 定义组件名称\r\n        name: 'app',\r\n        components: {    // 声明子组件\r\n            // HelloWorld,\r\n            // greeting,\r\n            // projects,\r\n            // projectsNew,\r\n            // def_table,\r\n            // messageBox,\r\n            // Login\r\n            navbar\r\n        },\r\n        // data() {\r\n        //     return {\r\n        //         msg: \"greeting component`s msg\",\r\n        //         // title: 'title属性'\r\n        //     }\r\n        // },\r\n    }\r\n</script>\r\n\r\n<style>\r\n    #app {\r\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        text-align: center;\r\n        color: #2c3e50;\r\n        margin-top: 60px;\r\n    }\r\n</style>\r\n\r\n"]}